service: ${env:API_NAME}

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:AWS_REGION}
  stage: ${env:API_STAGE}
  memorySize: 1024
  timeout: 4
  environment:
    GREMLIN_ENDPOINT: ${env:GREMLIN_ENDPOINT}
    # GREMLIN_DATABASE: ${env:GREMLIN_DATABASE}
    # GREMLIN_PRIMARYKEY: ${env:GREMLIN_PRIMARYKEY}
    # GREMLIN_COLLECTION: ${env:GREMLIN_COLLECTION}
    TWILIO_ACCOUNTSID: ${env:TWILIO_ACCOUNTSID}
    TWILIO_AUTHTOKEN: ${env:TWILIO_AUTHTOKEN}
    SENDGRID_KEY: ${env:SENDGRID_KEY}
    API_STAGE: ${env:API_STAGE}

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-include-dependencies
  - serverless-step-functions
  - serverless-pseudo-parameters
  # - serverless-aws-documentation
  # - serverless-domain-manager
  - serverless-offline
  # - serverless-websockets-plugin

# resources:
#   Resources:
#     ApiGatewayRestApi:
#       Type: AWS::ApiGateway::RestApi
#       Properties:
#         Name: ${env:AWS_API_GATEWAY_NAME}

custom:
  serverless-offline:
    httpsProtocol: "certificates"
    port: 3500

#   customDomain:
#     domainName: ${env:API_DOMAIN}
#     certificateName: ${env:API_CERTIFICATE_NAME}
#     basePath: ${env:API_STAGE}
#     stage: ${self:provider.stage}
#     createRoute53Record: false
#     endpointType: edge

  documentation:
      api:
        info:
          version: "1"
          title: "Weavver Home - API"
          description: "This API basically replicates all functionality available on ${env:WEBSITE_DOMAIN}."
          termsOfService: ${env:WEBSITE_DOMAIN}
          contact:
            name: ${env:CONTACT_NAME_FULL}
            url: ${env:API_DOMAIN}
            # email: ""
          license:
            name: "MIT"
            url: "http://${env:WEBSITE_DOMAIN}"
      tags:
        -
          name: "Data Creation"
          description: "Services to create things"
        -
          name: "Some other tag"
          description: "A tag for other things"
      authorizers:
        -
          name: "MyCustomAuthorizer"
          description: "This is an error"
      #resources:
        #-
          #path: "cases"
          #description: "This is the description for cases."
        #-
          #path: "some/other/path"
          #description: "This is the description for some/other/path"

package:
  excludeDevDependencies: true
  exclude:
    - node_modules/**
  include:
    - node_modules/@maxmind/**
    - node_modules/@sendgrid/**
    - node_modules/gremlin/**
    - node_modules/apollo**
    - node_modules/@apollo**

functions:

  default:
    handler: src/lambda.routes
    events:
    - http:
        path: echo
        method: ANY
        cors: true
        documentation:
          summary: "/echo"

  graphql:
    handler: src/lambda.graphql
    events:
    - http:
        path: /graphql
        method: ANY
        cors:
          origin: https://${env:WEBSITE_DOMAIN}
          allowCredentials: true
    # - httpApi:
    #     path: /graphql
    #     method: POST
    #     cors:
    #       origin: https://${env:WEBSITE_DOMAIN}
    #       allowCredentials: true

  # Api: '*'
  #       path: '*'
  #       # cors:
  #       #   origin: https://${env:WEBSITE_DOMAIN}
  #       #   allowCredentials: true