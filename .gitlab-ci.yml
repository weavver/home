image: registry.gitlab.com/weavver/home/ci

cache:
  paths:
    - node_modules/
    - .npm

stages:
  - build
  - build-docker
  - test
  - deploy-api
  - deploy-website

build:
  stage: build
  only:
    - master
  artifacts:
    untracked: true
  script:
    - node --version
    - npm i typescript -g
    - cd api
    - npm ci
    - tsc
    - cd ..
    - cd website
    - npm ci
    - ./node_modules/@angular/cli/bin/ng build --progress false --prod # --base-href accounts.weavver.com
#    - ./node_modules/@angular/cli/bin/ng test --progress false --single-run=true --watch=false
#    - ./node_modules/@angular/cli/bin/ng e2e --progress false --watch=false
  artifacts:
    paths:
      - api/dist/*
      - website/dist/*
      - node_modules/*
      - .env.default
      - tsconfig.json
      - package.json
      - package-lock.json
      - app.ts ./app.ts
      - infrastructure/home/docker-entrypoint.sh

build-docker:
  stage: build-docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --skip-tls-verify-registry $CI_REGISTRY --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/infrastructure/home/Dockerfile --destination $CI_REGISTRY_IMAGE:latest

test:
  services:
    - janusgraph/janusgraph:latest
  stage: test
  script:
    - echo $CI_JOB_STAGE # calls a predefined variable
    - echo $TEST
    - cd api
    - npm ci --cache .npm
    - npm install -g ts-node
    - export GREMLIN_ENDPOINT=ws://janusgraph-janusgraph:8182/gremlin
    - ts-node home-tool.ts --center-add
    - ts-node home-tool.ts --identity-add
    - cd certificates
    - ./generate.sh
    - cd ..
    - npm install -g mocha
    - npm test

deploy-api:
  stage: deploy-api
  only:
    - master
  dependencies:
    - build
  script:
    - cd api
    - npm ci
    - npm install -g serverless
    # - serverless create_domain
    - serverless deploy

deploy-website:
  stage: deploy-website
  image:
    name: mesosphere/aws-cli:1.14.5
    entrypoint: [""]
  only:
    - master
  dependencies:
    - build
  script:
    - aws s3 sync website/dist s3://$AWS_S3_BUCKET --delete --acl public-read
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"
